AWSTemplateFormatVersion: 2010-09-09
Description: ITS-LOG template. You can deploy it alone or in pairs!
Parameters:
  # RESEARCH: Is it possible to create multiple recipients (one subscription each)
  # Looks like a nested stack is required https://stackoverflow.com/a/50063297
  NotificationRecipient:
    Description: Recipient for Log Bundle and Survey upload notification emails
    Type: String
  LogBucketName:
    Type: String
  LogBucketPrefix:
    Description: Prefix for ITS-LOG uploaded content
    Type: String
    Default: itslog
  NotifierRoleName:
    Description: Name of role for notification Lambda functions
    Type: String
    Default: itslog-sns-s3
  IamUploaderRoleName:
    Description: Role that can upload to logs and surveys directories
    Type: String
    Default: itslog-upload
  IamUploaderUsers:
    Description: List of IAM users that can upload to bucket.
    Type: CommaDelimitedList
  IamDownloaderRoleName:
    Description: Role that can list and download logs and surveys.
    Type: String
    Default: itslog-download
Resources:
  UploadNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: ITS-LOG Upload Notification
      FifoTopic: False
  UploadNotificationMail:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        Ref: NotificationRecipient
      Protocol: email
      TopicArn: !Ref 'UploadNotificationTopic'
  
  # TODO Need a random unique name https://stackoverflow.com/q/54897459
  UploadEventHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Read-only access to bucket subdirectories and SNS topic
      # RoleName: !Ref 'NotifierRoleName'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowSNS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  # Should we be able to create new streams?
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                # Is this the right type of object?
                Resource: !Ref 'UploadNotificationTopic'
  # UploadedLogHandler:
  #   Type: AWS::Lambda::Function
  #   Properties:
  #     Description: Trigger email notifications when Log Files are uploaded
  #     Runtime: nodejs16.x
  #     Role: !Ref 'UploadEventHandlerRole'
  #     Handler: index.handler
  #     Code:
  #       ZipFile: |
  #         var util = require('util');
  #         var AWS = require('aws-sdk');  
  #         // AWS.config.region = 'us-east-1';
  #         var snsTopicARN = "arn:aws:sns:us-east-1:607456343589:sysdiag-alerts";

  #         exports.handler = function(event, context, callback) {
  #           // Read options from the event.
  #           console.log("Reading options from event:\n", util.inspect(event, {depth: 5}));

  #           var s3Event = event.Records[0];

  #           var srcBucket = s3Event.s3.bucket.name;
  #           var srcEvent = s3Event.eventName;
  #           var time = s3Event.eventTime;

  #           var object = s3Event.s3.object.key;
  #           var size = Math.round((s3Event.s3.object.size)/1048576);

  #           // Regular speed bucket
  #           var s3Url = "https://" + srcBucket + ".s3.amazonaws.com/" + object
            
  #           // S3 accelerate bucket
  #           // var s3Url = "https://" + srcBucket + ".s3-accelerate.amazonaws.com/" + object
  #           // Example URL: https://itslog-blammo-001.s3.amazonaws.com/itslog/logs/abcd1234.tar.gz

  #           var msg =   "ITS-LOG: a sysdiagnose file was just uploaded. \r\n\r\n" +
  #                       "Bucket: " + srcBucket + "\r\n" + 
  #                       "Event: " + srcEvent + "\r\n" +
  #                       "Object: " + object + "\r\n" +
  #                       "Size: " + size + " MB\r\n" +
  #                       "Time: " + time + "\r\n" + 
  #                       "URL: " + s3Url + "\r\n" ;

  #           var sns = new AWS.SNS();

  #           sns.publish({
  #               Subject: "ITS-LOG: Sysdiagnose Uploaded",
  #               Message: msg,
  #               TopicArn: snsTopicARN
  #           }, 
  #           function(err, data) {
  #               if (err) {
  #                   console.log(err.stack);
  #                   return;
  #               }
  #               console.log(s3Event);
  #               console.log('push sent');
  #               console.log(s3Event);
  #               console.log(msg);
  #               context.done(null, 'Function Finished!');  
  #           });

  ItsLogBucket:
    Type: AWS::S3::Bucket
    Description: Stores incoming logs
    Properties:
      BucketName:
        Ref: LogBucketName
      # NotificationConfiguration:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LifecycleConfiguration:
        Rules:
          - Id: PruneOldLogs
            Prefix: !Sub
              - '${Prefix}/logs/'
              - Prefix: !Ref LogBucketPrefix
            Status: Enabled
            ExpirationInDays: 7
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
          - Id: PruneOldSurveys
            Prefix: !Sub
              - '${Prefix}/surveys/'
              - Prefix: !Ref LogBucketPrefix
            Status: Enabled
            ExpirationInDays: 7
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1

# IAM - Role
# IAM - User
# SNS
# Lambda - Logs
# Lambda - Surveys

# Reference Material
# - [AWS CloudFormation Docs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/)
# - [Resource and Property Reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
